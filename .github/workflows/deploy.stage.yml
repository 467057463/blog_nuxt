name: BLOG_API CI/CD

on:
  push:
    branches:
      - stage

jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build App Artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          npm install
          npm run build:stage
          tar -czf "${GITHUB_SHA}".tar.gz .output ./ecosystem.stage.config.cjs
      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on INT server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-artifacts

      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          port: "22"
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/blog_nuxt-stage/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: "22"
          envs: GITHUB_SHA
          script: |
            mkdir -p "/var/www/blog_nuxt-stage/releases/${GITHUB_SHA}"
            tar xzf /var/www/blog_nuxt-stage/artifacts/${GITHUB_SHA}.tar.gz -C "/var/www/blog_nuxt-stage/releases/${GITHUB_SHA}"
            rm -rf /var/www/blog_nuxt-stage/artifacts/${GITHUB_SHA}.tar.gz



  activate-release:
      name: "Activate release"
      runs-on: ubuntu-latest
      needs: prepare-release-on-servers
      steps:
        - name: Activate Release
          uses: appleboy/ssh-action@master
          env:
            RELEASE_PATH: /var/www/blog_nuxt-stage/releases/${{ github.sha }}
            ACTIVE_RELEASE_PATH: /var/www/blog_nuxt-stage/live
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.DEPLOY_KEY }}
            port: "22"
            envs: RELEASE_PATH,ACTIVE_RELEASE_PATH
            script: |
              export NVM_DIR=~/.nvm
              source ~/.nvm/nvm.sh
              npm --help
              ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
              cd $ACTIVE_RELEASE_PATH
              pm2 restart ./blog_nuxt-stage


  clean-up:
    name: "Clean up old versions"
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: "22"
          script: |
            cd /var/www/blog_nuxt-stage/releases && ls -t -1 | tail -n +4 | xargs rm -rf
            cd /var/www/blog_nuxt-stage/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: app-artifacts

  # systemctl restart fullstackjack
  # chown -R www-data:www-data ${RELEASE_PATH}
  # chown -R www-data:www-data  /var/www/blog_nuxt-stage/database
  # cd /var/www/blog_nuxt-stage/database && npx prisma migrate deploy


  # deploy:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]

  #   steps:
  #     - name: Deploy using ssh
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.DEPLOY_KEY }}
  #         port: 22
  #         script: |
  #           export NVM_DIR=~/.nvm
  #           source ~/.nvm/nvm.sh
  #           npm --help
  #           cd /var/www/blog_nuxt-stage
  #           git pull origin stage
  #           git status
  #           npm install
  #           npm run build:stage
  #           pm2 restart ./ecosystem.config.stage.cjs