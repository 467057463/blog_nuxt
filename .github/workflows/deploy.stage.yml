name: BLOG_API CI/CD

on:
  push:
    branches:
      - stage

jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build App Artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          npm install
          npm run build:stage
          tar -czf "${GITHUB_SHA}".tar.gz .output ./ecosystem.config.stage.cjs
      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on INT server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-artifacts

      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          port: "22"
          username: "root"
          key: ${{ secrets.DEPLOY_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/html/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{env.SSH_HOST}}
          username: "root"
          key: ${{ secrets.DEPLOY_KEY }}
          port: "22"
          envs: GITHUB_SHA
          script: |
            mkdir -p "/var/www/html/releases/${GITHUB_SHA}"
            tar xzf /var/www/html/artifacts/${GITHUB_SHA}.tar.gz -C "/var/www/html/releases/${GITHUB_SHA}"
            rm -rf /var/www/html/artifacts/${GITHUB_SHA}.tar.gz






  # deploy:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]

  #   steps:
  #     - name: Deploy using ssh
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.DEPLOY_KEY }}
  #         port: 22
  #         script: |
  #           export NVM_DIR=~/.nvm
  #           source ~/.nvm/nvm.sh
  #           npm --help
  #           cd /var/www/blog_nuxt-stage
  #           git pull origin stage
  #           git status
  #           npm install
  #           npm run build:stage
  #           pm2 restart ./ecosystem.config.stage.cjs